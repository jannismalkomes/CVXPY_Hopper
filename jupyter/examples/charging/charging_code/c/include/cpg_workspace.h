
/*
Auto-generated by CVXPYgen on September 18, 2025 at 15:51:45.
Content: Type definitions and variable declarations.
*/

#include "ecos.h"

#ifndef CPG_TYPES_H
# define CPG_TYPES_H

typedef double cpg_float;
typedef int cpg_int;

// Compressed sparse column matrix
typedef struct {
  cpg_int      *p;
  cpg_int      *i;
  cpg_float    *x;
  cpg_int      nnz;
} cpg_csc;

// Canonical parameters
typedef struct {
  cpg_float    *c;         // Canonical parameter c
  cpg_float    d;          // Canonical parameter d
  cpg_csc      *A;         // Canonical parameter A
  cpg_float    *b;         // Canonical parameter b
  cpg_csc      *G;         // Canonical parameter G
  cpg_float    *h;         // Canonical parameter h
} Canon_Params_t;

// Flags indicating outdated canonical parameters
typedef struct {
  int        c;            // Bool, if canonical parameter c outdated
  int        d;            // Bool, if canonical parameter d outdated
  int        A;            // Bool, if canonical parameter A outdated
  int        b;            // Bool, if canonical parameter b outdated
  int        G;            // Bool, if canonical parameter G outdated
  int        h;            // Bool, if canonical parameter h outdated
} Canon_Outdated_t;

// Primal solution
typedef struct {
  cpg_float    *u;         // Your variable u
  cpg_float    *q;         // Your variable q
} CPG_Prim_t;

// Dual solution
typedef struct {
  cpg_float    *d0;        // Your dual variable for constraint d0
  cpg_float    *d1;        // Your dual variable for constraint d1
  cpg_float    *d2;        // Your dual variable for constraint d2
  cpg_float    *d3;        // Your dual variable for constraint d3
  cpg_float    *d4;        // Your dual variable for constraint d4
  cpg_float    d5;         // Your dual variable for constraint d5
  cpg_float    d6;         // Your dual variable for constraint d6
} CPG_Dual_t;

// Solver information
typedef struct {
  cpg_float    obj_val;    // Objective function value
  cpg_int      iter;       // Number of iterations
  cpg_int      status;     // Solver status
  cpg_float    pri_res;    // Primal residual
  cpg_float    dua_res;    // Dual residual
} CPG_Info_t;

// Solution and solver information
typedef struct {
  CPG_Prim_t *prim;        // Primal solution
  CPG_Dual_t *dual;        // Dual solution
  CPG_Info_t *info;        // Solver info
} CPG_Result_t;

// Parameter deltas
typedef struct {
  cpg_float    *p;         // Delta of your parameter p
  cpg_float    *s;         // Delta of your parameter s
  cpg_float    *gamma;     // Delta of your parameter gamma
  cpg_float    *D;         // Delta of your parameter D
  cpg_float    *C;         // Delta of your parameter C
  cpg_float    *Q;         // Delta of your parameter Q
} CPG_Delta_t;

// Solver settings
typedef struct {
  cpg_float  feastol;
  cpg_float  abstol;
  cpg_float  reltol;
  cpg_float  feastol_inacc;
  cpg_float  abstol_inacc;
  cpg_float  reltol_inacc;
  cpg_int    maxit;
} Canon_Settings_t;

#endif // ifndef CPG_TYPES_H

// Vector containing flattened user-defined parameters
extern cpg_float cpg_params_vec[2885];

// Sparse mappings from user-defined to canonical parameters
extern cpg_csc canon_c_map;
extern cpg_csc canon_b_map;
extern cpg_csc canon_h_map;

// Canonical parameters
extern cpg_float canon_c[4322];
extern cpg_float canon_c_conditioning[4322];
extern cpg_csc canon_A;
extern cpg_csc canon_A_conditioning;
extern cpg_float canon_b[1442];
extern cpg_float canon_b_conditioning[1442];
extern cpg_csc canon_G;
extern cpg_csc canon_G_conditioning;
extern cpg_float canon_h[10084];
extern cpg_float canon_h_conditioning[10084];

// Struct containing canonical parameters
extern Canon_Params_t Canon_Params;
extern Canon_Params_t Canon_Params_conditioning;

// Struct containing flags for outdated canonical parameters
extern Canon_Outdated_t Canon_Outdated;

// User-defined variables
extern cpg_float cpg_u[1440];
extern cpg_float cpg_q[1441];

// Dual variables associated with user-defined constraints
extern cpg_float cpg_d0[1440];
extern cpg_float cpg_d1[1440];
extern cpg_float cpg_d2[1440];
extern cpg_float cpg_d3[1441];
extern cpg_float cpg_d4[1441];

// Struct containing primal solution
extern CPG_Prim_t CPG_Prim;

// Struct containing dual solution
extern CPG_Dual_t CPG_Dual;

// Struct containing solver info
extern CPG_Info_t CPG_Info;

// Struct containing solution and info
extern CPG_Result_t CPG_Result;

// Struct containing solver settings
extern Canon_Settings_t Canon_Settings;

// ECOS array of SOC dimensions
extern cpg_int ecos_q[1];

// ECOS workspace
extern pwork* ecos_workspace;

// ECOS exit flag
extern cpg_int ecos_flag;
